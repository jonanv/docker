
docker run --name some-postgres -env POSTGRES_PASSWORD=mysecretpassword -d postgres

docker container run \
--name world-db \
-dp 3307:3306 \
--env MARIADB_USER=example-user \
--env MARIADB_PASSWORD=user-password \
--env MARIADB_ROOT_PASSWORD=root-secret-password \
--env MARIADB_DATABASE=world-db \
--volume world-db:/var/lib/mysql \
--network world-app \
mariadb:jammy


docker container run \
--name phpmyadmin \
-d \
--env PMA_ARBITRARY=1 \
-p 8070:80 \
--network world-app \
phpmyadmin:5.2.0-apache

docker container run --name phpmyadmin -d --env PMA_ARBITRARY=1 -p 8070:80 phpmyadmin:5.2.0-apache

docker container run --name nest-app -w /app -dp 80:3000 -v %cd%:/app node:16-alpine3.16 sh -c "yarn install && start:dev"

docker container run -d --name postgres-db --env POSTGRES_PASSWORD=123456 -v postgres-db:/var/lib/postgresql/data postgres:15.1

docker container run --name pgAdmin --env PGADMIN_DEFAULT_PASSWORD=123456 --env PGADMIN_DEFAULT_EMAIL=superman@google.com -dp 8080:80 dpage/pgadmin4:6.17



DOCKER BUILD
docker buildx create --name mybuilder --driver docker-container --bootstrap mybuilder

docker buildx use mybuilder

docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t <username>/<image>:latest --push .

docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t jonanv/cron-ticker:latest --push .

docker buildx ls

docker buildx use default

docker buildx rm mybuilder

docker buildx imagetools inspect jonanv/cron-ticker:latest


TARGET STATE
docker compose down --volumes

docker compose build

docker compose -f docker-compose.prod.yml build

docker tag jonanv/teslo-shop-backend jonanv/teslo-shop:1.0.0 

docker push jonanv/teslo-shop:1.0.0

docker buildx build --platform linux/amd64,linux/arm64 -t jonanv/teslo-shop:1.0.0 --push .

docker image prune -a // Eliminar todas las imagenes

docker compose up -d




docker build --tag jonanv/docker-graphql:0.0.1 . // Construcci√≥n de la imagen

docker container run -d -p 3000:3000 jonanv/docker-graphql:0.0.1


// NGINX
docker run --name some-nginx -d -p 8080:80 nginx:1.23.3

docker exec -it e5b bash // Ingresar a la terminar interactiva de un contenedor con bash

docker build --tag heroes-app . --no-cache

docker container run -p 80:80 heroes-app

// KUBERNETS
minikube version
minikube start
kubectl version
kubectl version --short
kubectl get all
kubectl apply -f postgres-config.yml
